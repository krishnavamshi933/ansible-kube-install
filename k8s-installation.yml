---
- hosts: all
  become: yes
  tasks:
    - name: create the 'ubuntu' user
      user:
        name: ubuntu
        append: yes
        state: present
        createhome: yes
        shell: /bin/bash

    - name: allow 'ubuntu' to have passwordless sudo
      lineinfile:
        dest: /etc/sudoers
        line: 'ubuntu ALL=(ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'

    - name: set up authorized keys for the ubuntu user
      authorized_key:
        user: ubuntu
        key: "{{ lookup('file', '~/.ssh/authorized_keys') }}"

    - name: create Docker config directory
      file: path=/etc/docker state=directory

    - name: changing Docker to systemd driver
      copy:
        dest: "/etc/docker/daemon.json"
        content: |
          {
            "exec-opts": ["native.cgroupdriver=systemd"]
          }

    - name: install Docker
      apt:
        name: docker.io
        state: present
        update_cache: true

    - name: install APT Transport HTTPS
      apt:
        name: apt-transport-https
        state: present

    - name: add Kubernetes apt-key
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: add Kubernetes' APT repository
      apt_repository:
        repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: 'kubernetes'

    - name: install kubelet
      apt:
        name: kubelet=1.22.4-00
        state: present
        update_cache: true

    - name: install kubeadm
      apt:
        name: kubeadm=1.22.4-00
        state: present

- hosts: masters
  become: yes
  tasks:
    - name: install kubectl
      apt:
        name: kubectl=1.22.4-00
        state: present
        force: yes

    - name: get join command
      shell: kubeadm token create --print-join-command
      register: join_command_raw

    - name: set join command
      set_fact:
        join_command: "{{ join_command_raw.stdout_lines[0] }}"

- hosts: workers
  become: yes
  tasks:
    - name: join cluster
      shell: "{{ hostvars['master1'].join_command }} >> node_joined.txt"
      args:
        chdir: $HOME
        creates: node_joined.txt
